&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	Элементы.ГруппаКаталог.Видимость = (Источник = "Каталог");
	Элементы.ГруппаКонфигуратор.Видимость = (Источник = "Конфигуратор");
КонецПроцедуры


&НаСервере
Функция ПолучитьСписокМетаданныхПеречисления()
	Список = Новый Массив;
	Для Каждого МетаданныеПеречисления Из Метаданные.Перечисления Цикл
		Список.Добавить(МетаданныеПеречисления.ПолноеИмя());
	КонецЦикла;
	Возврат Список;
КонецФункции

&НаКлиенте
Функция ПолучитьСоответствияПространствИменПоУмолчанию(ДокументDOM)
	СоответствияПространствИмен = Новый Массив;
	СчетчикTNS = 0;
	ПрефиксTNS = "t";
	Для Каждого Атрибут Из ДокументDOM.ЭлементДокумента.Атрибуты Цикл
		Если Атрибут.Префикс = "xmlns" Тогда
			СоответствиеПространстваИмен = Новый Структура("Префикс, ПространствоИмен", Атрибут.ЛокальноеИмя, Атрибут.Значение);
			Если Атрибут.ЛокальноеИмя = ПрефиксTNS Тогда
				СчетчикTNS = СчетчикTNS + 1;
				СоответствиеПространстваИмен.Префикс = ПрефиксTNS + СчетчикTNS;
			КонецЕсли;
			СоответствияПространствИмен.Добавить(СоответствиеПространстваИмен);
		КонецЕсли;
		Если ДокументDOM.ПространствоИменПоУмолчанию(Атрибут.Значение) Тогда
			СоответствиеПространстваИмен = Новый Структура("Префикс, ПространствоИмен", ПрефиксTNS, Атрибут.Значение);
			СоответствияПространствИмен.Добавить(СоответствиеПространстваИмен);
		КонецЕсли;
	КонецЦикла;
	СловарьПространствИмен = Новый Соответствие;
	Для Каждого СоответствиеПространствИмен Из СоответствияПространствИмен Цикл
		СловарьПространствИмен[СоответствиеПространствИмен.Префикс] = СоответствиеПространствИмен.ПространствоИмен;
	КонецЦикла;
	Возврат СловарьПространствИмен;
КонецФункции

&НаКлиенте
Функция ПолучитьОписаниеМетаданныхJSON(ПутьКВыгрузке)
	Перем Наименование;
	Перем uuid;
	Перечисления = Новый Массив;
	Если Источник = "Конфигуратор" ИЛИ ФорматВыгрузки = "XML" Тогда
		НайденныеФайлы = НайтиФайлы(ПутьКВыгрузке + "\Enums", "*.xml", Ложь);
	Иначе
		НайденныеФайлы = НайтиФайлы(ПутьКВыгрузке + "\Enums", "*.mdo", Истина);
	КонецЕсли;
	ЧтениеXML = Новый ЧтениеXML;
	Для Каждого Файл Из НайденныеФайлы Цикл
		ЧтениеXML.ОткрытьФайл(Файл.ПолноеИмя);
		Построитель       = Новый ПостроительDOM;
		ДокументDOM      = Построитель.Прочитать(ЧтениеXML);
		
		СоответствияПространствИменПоУмолчанию = ПолучитьСоответствияПространствИменПоУмолчанию(ДокументDOM);
		Разыменователь = Новый РазыменовательПространствИменDOM(СоответствияПространствИменПоУмолчанию);
		ВыражениеXPath = "//*[@uuid]";
		НаборУзлов = ДокументDOM.ВычислитьВыражениеXPath(ВыражениеXPath, ДокументDOM, Разыменователь);
		УзелЭлементаКоллекции = НаборУзлов.ПолучитьСледующий();
		ИмяПеречисления = УзелЭлементаКоллекции.ДочерниеУзлы[1].ДочерниеУзлы[0].ТекстовоеСодержимое;
		
		ОписаниеПеречисления = Новый Структура;
		ОписаниеПеречисления.Вставить("Имя", ИмяПеречисления);
		ОписаниеПеречисления.Вставить("Значения", Новый Массив);
		Значения = ОписаниеПеречисления.Значения;
		Пока Истина Цикл
			УзелЭлементаКоллекции = НаборУзлов.ПолучитьСледующий();
			Если УзелЭлементаКоллекции = Неопределено Тогда
				Прервать;
			КонецЕсли;
			uuid = УзелЭлементаКоллекции.Атрибуты[0].Значение;
			Наименование = УзелЭлементаКоллекции.ДочерниеУзлы[0].ДочерниеУзлы[0].ТекстовоеСодержимое;
			Значения.Добавить(Новый Структура("Наименование, uuid", Наименование, uuid));
		КонецЦикла;
		
		Перечисления.Добавить(ОписаниеПеречисления);
	КонецЦикла;
	
	json = ОбщийКлиентСервер.ОбъектВJSON(Перечисления);
	Возврат json;
КонецФункции

&НаКлиенте
Асинх Процедура КомандаПолучитьМетаданныеПеречислений(Команда)
	Если Источник = "Каталог" Тогда
		ОписаниеМетаданныхJSON = ПолучитьОписаниеМетаданныхJSON(Объект.Каталог);
		Объект.МакетПеречисления.УстановитьТекст(ОписаниеМетаданныхJSON);
		Возврат;
	КонецЕсли;
	ПутьКВыгрузке = ПолучитьИмяВременногоФайла();
	ПутьКДаннымСписка = ПолучитьИмяВременногоФайла("txt");
	Ждать СоздатьКаталогАсинх(ПутьКВыгрузке);
	ТекстСпискаМетаданных = Новый ТекстовыйДокумент;
	СписокМетаданныхПеречисления = ПолучитьСписокМетаданныхПеречисления();
	Для Каждого ИмяМетаданных Из СписокМетаданныхПеречисления Цикл
		ТекстСпискаМетаданных.ДобавитьСтроку(ИмяМетаданных);
	КонецЦикла;
	Ждать ТекстСпискаМетаданных.ЗаписатьАсинх(ПутьКДаннымСписка, КодировкаТекста.UTF8);
	Строки = Новый Массив;
	Строки.Добавить("""" + Объект.ПутьКПриложению1С + """");
	Строки.Добавить("DESIGNER");
	Строки.Добавить("/IBConnectionString");
	Строки.Добавить("""" + СтрЗаменить(Объект.СтрокаСоединения, """", """""") + """");
	Строки.Добавить("/DumpConfigToFiles");
	Строки.Добавить(ПутьКВыгрузке);
	Строки.Добавить("-listFile");
	Строки.Добавить(ПутьКДаннымСписка);
	СтрокаКоманды = СтрСоединить(Строки, " ");
	Ждать ЗапуститьПриложениеАсинх(СтрокаКоманды, , Истина);
	ОписаниеМетаданныхJSON = ПолучитьОписаниеМетаданныхJSON(ПутьКВыгрузке);
	Объект.МакетПеречисления.УстановитьТекст(ОписаниеМетаданныхJSON);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ФорматВыгрузки = "EDT";
	Источник = "Каталог";
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСтрокуСоединения(Команда)
	Объект.СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПутьКПриложению(Команда)
	Объект.ПутьКПриложению1С = КаталогПрограммы() + "1cv8.exe";
КонецПроцедуры


&НаКлиенте
Процедура ИсточникПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры
