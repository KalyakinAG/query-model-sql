//МодельЗапросаSQL = Общий.МодельЗапросаSQL();
Функция МодельЗапросаSQL() Экспорт
	МодельЗапросаSQL = Обработки.МодельЗапросаSQL.Создать();
	Возврат МодельЗапросаSQL;
КонецФункции

// Создает таблицу значений на основании информации о колонках.
// 
// Параметры:
// Колонки 	- Структура - {Имя, ОписаниеТипа}|{Имя, ТипЗнч(Значение)}
// 			- КоллекцияКолонокТаблицыЗначений, КоллекцияКолонокДереваЗначений, КоллекцияКолонокРезультатаЗапроса
// 			- Строка
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица значений
Функция ТаблицаЗначений(Колонки) Экспорт 
	Таблица 	= Новый ТаблицаЗначений;
	СоздатьКолонки(Таблица, Колонки);
	Возврат Таблица;
КонецФункции

Функция ТипЗначенияИзСтроки(Знач ТипСтрокой) Экспорт
	ТипСтрокой = ВРег(ТипСтрокой);
	Если СтрНачинаетсяС(ТипСтрокой, "СТРОКА") Тогда
		ДлинаСтроки = СтрЗаменить(ТипСтрокой, "СТРОКА", "");
		ДлинаСтроки = СтрЗаменить(ДлинаСтроки, "(", "");
		ДлинаСтроки = СтрЗаменить(ДлинаСтроки, ")", "");
		Если НЕ ПустаяСтрока(ДлинаСтроки) Тогда
			ТипЗначения = ОбщегоНазначения.ОписаниеТипаСтрока(ДлинаСтроки);
		Иначе
			ТипЗначения = Новый ОписаниеТипов(ТипСтрокой);							
		КонецЕсли;
	ИначеЕсли СтрНачинаетсяС(ТипСтрокой, "ЧИСЛО") Тогда
		ДлинаЧисла = СтрЗаменить(ТипСтрокой, "ЧИСЛО", "");
		ДлинаЧисла = СтрЗаменить(ДлинаЧисла, "(", "");
		ДлинаЧисла = СтрЗаменить(ДлинаЧисла, ")", "");
		Состав = СтрРазделить(ДлинаЧисла, ", ", Ложь);
		Если НЕ ЗначениеЗаполнено(ДлинаЧисла) Тогда
			ТипЗначения = Новый ОписаниеТипов(ТипСтрокой);
		ИначеЕсли Состав.Количество() = 1 Тогда
			ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(Состав[0]);
		Иначе
			ТипЗначения = ОбщегоНазначения.ОписаниеТипаЧисло(Состав[0], Состав[1]);
		КонецЕсли;
	Иначе
		ТипЗначения = Новый ОписаниеТипов(ТипСтрокой);// ДАТА, БУЛЕВО
	КонецЕсли;
	Возврат ТипЗначения;
КонецФункции

Процедура СоздатьКолонки(Коллекция, Колонки)
	ТипЗначения = ТипЗнч(Колонки);
	Если ТипЗначения = Тип("Строка") Тогда
		Для каждого Колонка Из ОбщийКлиентСервер.Массив(Колонки) Цикл
			Коллекция.Колонки.Добавить(Колонка);
		КонецЦикла;
	ИначеЕсли ТипЗначения = Тип("Массив") Тогда
		Если Тип(Колонки[0]) = Тип("Структура") Тогда
			Для каждого Колонка Из Колонки Цикл
				Коллекция.Колонки.Добавить(Колонка.Имя, ТипЗначенияИзСтроки(Колонка.ТипЗначения));
			КонецЦикла;
		Иначе
			Для каждого Колонка Из ОбщийКлиентСервер.Массив(Колонки) Цикл
				Коллекция.Колонки.Добавить(Колонка);
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ТипЗначения = Тип("Структура") Тогда
		Для каждого Колонка Из Колонки Цикл
			ИмяКолонки 	= Колонка.Ключ;
			Значение 	= Колонка.Значение;
			Если Значение = Неопределено Тогда
				Коллекция.Колонки.Добавить(Колонка.Ключ);
			Иначе
				ТипЗначения = Колонка.Значение;
				Если ТипЗнч(ТипЗначения) = Тип("Строка") Тогда
					ТипЗначения = ТипЗначенияИзСтроки(ТипЗначения);
				ИначеЕсли ТипЗнч(ТипЗначения) <> Тип("ОписаниеТипов") Тогда
					ТипЗначения = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТипЗнч(ТипЗначения)));
				КонецЕсли;
				Коллекция.Колонки.Добавить(Колонка.Ключ, ТипЗначения);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипЗнч(Колонки) = Тип("КоллекцияОбъектовМетаданных") Тогда
		Для каждого Колонка Из Колонки Цикл
			Коллекция.Колонки.Добавить(Колонка.Имя, Колонка.Тип);
		КонецЦикла;
	Иначе 
		Для каждого Колонка Из Колонки Цикл
			ТипЗначения = Новый ОписаниеТипов(Колонка.ТипЗначения,, "Null");
			Коллекция.Колонки.Добавить(Колонка.Имя, ТипЗначения);
		КонецЦикла;		
	КонецЕсли; 
КонецПроцедуры

Функция ТаблицаЗначенийВСтруктуру(Таблица) Экспорт
	СтруктураТаблицы = Новый Структура("Колонки, Строки", Новый Структура, Новый Массив);
	Колонки = СтруктураТаблицы.Колонки;
	Для Каждого Колонка Из Таблица.Колонки Цикл
		ТипЗначения = Колонка.ТипЗначения;
		Тип = ТипЗначения.Типы()[0];
		Если Тип = Тип("Строка") Тогда
			ТипКолонки = СтрШаблон("СТРОКА(%1)", Формат(ТипЗначения.КвалификаторыСтроки.Длина, "ЧГ="));
		ИначеЕсли Тип = Тип("Число") Тогда
			Разрядность = Таблица.Колонки.year.ТипЗначения.КвалификаторыЧисла.Разрядность;
			РазрядностьДробнойЧасти = Таблица.Колонки.year.ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти;
			Если РазрядностьДробнойЧасти = 0 Тогда
				ТипКолонки = СтрШаблон("ЧИСЛО(%1)", Формат(Разрядность, "ЧГ="));
			Иначе
				ТипКолонки = СтрШаблон("ЧИСЛО(%1, %2)", Формат(Разрядность, "ЧГ="), Формат(РазрядностьДробнойЧасти, "ЧГ="));
			КонецЕсли;
		Иначе
			ТипКолонки = Строка(Тип);
		КонецЕсли;
		Колонки.Вставить(Колонка.Имя, ТипКолонки);
	КонецЦикла;
	Строки = СтруктураТаблицы.Строки;
	Для Каждого Строка Из Таблица Цикл
		Значения = Новый Массив;
		Для Каждого Колонка Из Колонки Цикл
			Значения.Добавить(Строка[Колонка.Ключ]);
		КонецЦикла;
		Строки.Добавить(Значения);
	КонецЦикла;
	Возврат СтруктураТаблицы;
КонецФункции

Функция СтруктураВТаблицуЗначений(ТаблицаJSON) Экспорт
	Если ТипЗнч(ТаблицаJSON) = Тип("Строка") Тогда
		Возврат СтруктураВТаблицуЗначений(ОбщийКлиентСервер.JSONВОбъект(ТаблицаJSON));
	КонецЕсли;
	Колонки = ТаблицаJSON.Колонки;
	Таблица = ТаблицаЗначений(Колонки);
	Для Каждого ДанныеСтроки Из ТаблицаJSON.Строки Цикл
		Строка = Таблица.Добавить();
		Для ИндексКолонки = 0 По ДанныеСтроки.ВГраница() Цикл
			Если Колонки[ИндексКолонки].ТипЗначения = "ДАТА" Тогда
				Строка[ИндексКолонки] = ПрочитатьДатуJSON(ДанныеСтроки[ИндексКолонки], ФорматДатыJSON.ISO);
				Продолжить;
			КонецЕсли;
			Строка[ИндексКолонки] = ДанныеСтроки[ИндексКолонки];
		КонецЦикла;
	КонецЦикла;
	Возврат Таблица;
КонецФункции
